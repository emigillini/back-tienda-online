components:
  
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    cart:
      type: object
      properties:
        id:
          type: integer
          format: int32
          unique: true
          description: El ID del carrito.
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: El ID del producto en el carrito.
              quantity:
                type: integer
                description: La cantidad de ese producto en el carrito.
          description: Los productos en el carrito.
        email:
          type: string
          description: El correo electrónico asociado al carrito.
      example:
        id: 123
        products:
          - productId: "product1"
            quantity: 2
          - productId: "product2"
            quantity: 3
        email: "correo@example.com"

paths:
  /cart:
    get:
      summary: Obtener todos los carritos
      tags:
        - Carritos
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cart'
          example:
            - id: 1
              products:
                - productId: "productA"
                  quantity: 2
                - productId: "productB"
                  quantity: 3
              email: "user@example.com"
            - id: 2
              products:
                - productId: "productC"
                  quantity: 1
              email: "anotheruser@example.com"
        '500':
          description: Error en el servidor

  /cart/addCart:
    post:
      summary: Agregar un nuevo carrito
      tags:
        - Carritos
      security:
        - basicAuth: []  
      responses:
        '200':
          description: Carrito creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
        '500':
          description: Error en el servidor


  /cart/{id}:
    get:
      summary: Obtener un carrito por ID
      tags:
        - Carritos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del carrito que se desea obtener.
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
          example:
            id: 1
            products:
              - productId: "productA"
                quantity: 2
              - productId: "productB"
                quantity: 3
            email: "usuario1@example.com"
        '404':
          description: Carrito no encontrado
          content:
            application/json:
              example:
                status: error
                error: Carrito no encontrado
        '500':
          description: Error en el servidor
  /cart/lastCart:
    get:
      summary: Obtener el carrito más reciente
      tags:
        - Carritos
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
          example:
            id: 123
            products:
              - productId: "productA"
                quantity: 2
              - productId: "productB"
                quantity: 3
            email: "user@example.com"
        '500':
          description: Error en el servidor  

  /cart/deletecart/{id}:
    delete:
      summary: Eliminar un carrito por ID
      security:
        - basicAuth: [] 
      tags:
        - Carritos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del carrito que se desea eliminar.
      responses:
        '204':
          description: Carrito eliminado exitosamente
        '404':
          description: Carrito no encontrado
          content:
            application/json:
              example:
                status: error
                error: Carrito no encontrado
        '500':
          description: Error en el servidor

   

  /cart/{cid}/product/{pid}:
    delete:
      summary: Eliminar un producto de un carrito por IDs
      security:
        - basicAuth: [] 
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del carrito del cual eliminar el producto.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: El ID del producto que se desea eliminar del carrito.
      responses:
        '204':
          description: Producto eliminado exitosamente del carrito
        '404':
          description: Carrito o producto no encontrado
          content:
            application/json:
              example:
                status: error
                error: Carrito o producto no encontrado
        '500':
          description: Error en el servidor
          
  /cart/deleteallproducts/{cid}:
    delete:
      summary: Eliminar todos los productos de un carrito por ID
      security:
        - basicAuth: [] 
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del carrito del cual eliminar todos los productos.
      responses:
        '204':
          description: Todos los productos eliminados exitosamente del carrito
        '404':
          description: Carrito no encontrado
          content:
            application/json:
              example:
                status: error
                error: Carrito no encontrado
        '500':
          description: Error en el servidor
  /cart/{cid}/purchase:
    post:
      summary: Realizar una compra desde un carrito por ID
      security:
        - basicAuth: [] 
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del carrito desde el cual realizar la compra.
      responses:
        '201':
          description: Compra realizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
          example:
            id: 1
            products: []
            email: "usuario1@example.com"
        '404':
          description: Carrito no encontrado
          content:
            application/json:
              example:
                status: error
                error: Carrito no encontrado
        '500':
          description: Error en el servidor
  /cart/addProductToCart/{cid}/product/{pid}:
    put:
      summary: Agregar un producto a un carrito por IDs
      security:
        - basicAuth: [] 
      tags:
        - Carritos
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del carrito al cual agregar el producto.
        - in: path
          name: pid
          required: true
          schema:
            type: integer
            format: int32
          description: El ID del producto que se desea agregar al carrito.
  
      responses:
        '200':
          description: Producto agregado exitosamente al carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
          example:
            id: 1
            products:
              - productId: "productA"
                quantity: 3
              - productId: "productB"
                quantity: 1
            email: "usuario1@example.com"
        '404':
          description: Carrito o producto no encontrado
          content:
            application/json:
              example:
                status: error
                error: Carrito o producto no encontrado
        '500':
          description: Error en el servidor
  